// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider    = "postgresql"
  url         = env("DATABASE_URL")
  directUrl   = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id        String     @id @default(uuid())
  clerkId   String     @unique 
  firstName String     
  lastName  String
  username  String
  email     String
  profileImage String
  CreatedAt DateTime    @default(now())
  updateAt  DateTime    @updatedAt
  books     Book[]
  favorites Favorite[]
  review Review[]
  order Order[]
}

model Book {
  id      String      @id @default(uuid())
  name    String    
  tagline String
  category String
  image   String
  damage  String
  description String
  price   Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  profile  Profile      @relation(fields: [profileId],references: [clerkId],onDelete: Cascade)
  profileId String
  favorites Favorite[]
  review Review[]
}

model Favorite {
  id  String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile Profile @relation(fields: [profileId], references: [clerkId],onDelete: Cascade)
  profileId String
  book Book @relation(fields: [bookId],references: [id],onDelete: Cascade)
  bookId  String
}

model Review  {
  id String @id @default(uuid())
  profile Profile @relation(fields: [profileId],references: [clerkId],onDelete: Cascade)
  profileId String
  book Book @relation(fields: [bookId],references: [id],onDelete: Cascade)
  bookId String
  comment String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(uuid())
  orderTotal Int
  paymentStatus Boolean @default(false)
  profile Profile @relation(fields: [profileId],references: [clerkId],onDelete: Cascade)
  profileId String
  items Json
  name String
  emailAdress String
  adress String
  createdAt DateTime @default(now())

}